{"version":3,"file":"microweb.js","sources":["../../src/sandbox.ts","../../src/utils.ts","../../src/source.ts","../../src/types/types.ts","../../src/app.ts","../../src/element.ts","../../src/index.ts"],"sourcesContent":["import { Window } from \"./types/types\";\r\nexport default class SandBox {\r\n  public isActive: boolean = false; //沙箱激活状态\r\n  public fakeWindow: object = Object.create(null); //被代理的对象\r\n  public newAddedProps: Set<string | symbol> = new Set(); //新添加的属性，在卸载时清空\r\n  public proxyWindow: object;\r\n  public releaseEffect: Function;\r\n  public appName: string;\r\n  constructor(appName: string) {\r\n    this.appName = appName;\r\n    //卸载钩子\r\n    this.releaseEffect = effect(this.fakeWindow);\r\n    this.proxyWindow = new Proxy(this.fakeWindow, {\r\n      get: (target, prop, receiver) => {\r\n        //防止window.window逃逸，类似的还有window.self之类的API\r\n        //需要特别注意一些边界case\r\n        if (prop in [\"0\", \"1\", \"self\", \"window\"]) {\r\n          return receiver;\r\n        }\r\n        //优先从代理对象上取值\r\n        if (Object.prototype.hasOwnProperty.call(target, prop)) {\r\n          return Reflect.get(target, prop);\r\n        }\r\n        //否则从原生window对象上取值\r\n        const value: any = Reflect.get(window, prop);\r\n        //如果兜底的值为函数，则需要绑定window对象，如: console、alert等\r\n        if (typeof value === \"function\") {\r\n          const valueStr = value.toString();\r\n          //排除构造函数\r\n          if (!/^function\\s+[A-Z]/.test(valueStr) && !/^class\\s+/.test(valueStr)) {\r\n            return value.bind(window);\r\n          }\r\n        }\r\n        //其他情况直接返回\r\n        return value;\r\n      },\r\n      set: (target, prop, newVal) => {\r\n        if (this.isActive) {\r\n          Reflect.set(target, prop, newVal);\r\n          //记录添加的变量，用于后续清空操作\r\n          this.newAddedProps.add(prop);\r\n        }\r\n        return true;\r\n      },\r\n      deleteProperty: (target, prop) => {\r\n        //当前prop存在于代理对象上时才满足删除条件\r\n        if (Object.prototype.hasOwnProperty.call(target, prop)) {\r\n          return Reflect.deleteProperty(target, prop);\r\n        }\r\n        return true;\r\n      },\r\n    });\r\n  }\r\n  /**\r\n   * 激活沙箱\r\n   */\r\n  public active(): void {\r\n    if (this.isActive) {\r\n      return console.warn(\r\n        `[microApp ${this.appName}]: The sandbox is Running, please do not open it repeatedly!`\r\n      );\r\n    }\r\n    this.isActive = false;\r\n  }\r\n  /**\r\n   * 关闭沙箱\r\n   */\r\n  public inActive(): void {\r\n    if (this.isActive) {\r\n      this.isActive = false;\r\n      //清空变量\r\n      this.newAddedProps.forEach(prop => {\r\n        Reflect.deleteProperty(this.fakeWindow, prop);\r\n      });\r\n      this.newAddedProps.clear();\r\n      //卸载全局事件\r\n      this.releaseEffect();\r\n    }\r\n  }\r\n  /**\r\n   * 修改js作用域\r\n   * @param code 代码\r\n   */\r\n  public bindScope(code: string): string {\r\n    (<Window>window).proxyWindow = this.proxyWindow;\r\n    return `;(function(window, self){with(window){;${code}\\n}}).call(window.proxyWindow, window.proxyWindow, window.proxyWindow);`;\r\n  }\r\n}\r\n//记录addEventListener、removeEventListener原生方法\r\nconst rawWindowAddEventListener: Function = window.addEventListener;\r\nconst rawWindowRemoveEventListener: Function = window.removeEventListener;\r\n/**\r\n * 重写全局事件的监听和解绑\r\n * @param fakeWindow\r\n */\r\nfunction effect(fakeWindow: Window) {\r\n  const eventListenerMap: Map<string, Set<Function>> = new Map();\r\n  //重写addEventListener\r\n  fakeWindow.addEventListener = function (\r\n    type: string,\r\n    handler: Function,\r\n    useCapture?: boolean\r\n  ): void {\r\n    const listenerList = eventListenerMap.get(type);\r\n    //当前事件非第一次监听，则添加缓存\r\n    if (listenerList) {\r\n      listenerList.add(handler);\r\n    } else {\r\n      //当前第一次监听，初始化数据\r\n      eventListenerMap.set(type, new Set([handler]));\r\n    }\r\n    //执行原生监听函数\r\n    return rawWindowAddEventListener.call(window, type, handler, useCapture);\r\n  };\r\n\r\n  //重写removeEventListener\r\n  fakeWindow.removeEventListener = function (\r\n    type: string,\r\n    handler: Function,\r\n    useCapture?: boolean\r\n  ):void {\r\n    const listenerList = eventListenerMap.get(type);\r\n    if (listenerList?.size && listenerList.has(handler)) {\r\n      listenerList.delete(handler);\r\n    }\r\n    //执行原生解绑函数\r\n    return rawWindowRemoveEventListener.call(window, type, handler, useCapture);\r\n  };\r\n  // 清空残余事件\r\n  return () => {\r\n    console.log(\"需要卸载的全局事件\", eventListenerMap);\r\n    //清空window绑定事件\r\n    if (eventListenerMap.size) {\r\n      // 将残余的没有解绑的函数依次解绑\r\n      eventListenerMap.forEach((listenerList, type) => {\r\n        if (listenerList.size) {\r\n          for (const handler of listenerList) {\r\n            rawWindowRemoveEventListener.call(window, type, handler);\r\n          }\r\n        }\r\n      });\r\n      eventListenerMap.clear();\r\n    }\r\n  };\r\n}\r\n","import { MicroElement } from \"./element\";\r\n/**\r\n * 是否为浏览器环境\r\n */\r\nexport const isBrowser = typeof window !== \"undefined\";\r\n/**\r\n * 获取静态资源\r\n * @param {string} entry 静态资源地址\r\n * @returns\r\n */\r\nexport function fetchSource(entry: string): Promise<string> {\r\n  return fetch(entry).then(res => {\r\n    return res.text();\r\n  });\r\n}\r\n/**\r\n * 判断目标是否为字符串\r\n * @param target 目标\r\n * @returns {boolean}\r\n */\r\nexport function isString(target: unknown): target is string {\r\n  return typeof target === \"string\";\r\n}\r\nexport function formatAppEntry(\r\n  entry: string | null,\r\n  appName: string | null = null\r\n): string {\r\n  if (!isString(entry) || !entry) return \"\";\r\n  return \"\";\r\n}\r\n/**\r\n * 给地址添加协议\r\n * @param entry 地址\r\n * @returns 添加协议的地址\r\n */\r\nexport function addProtocol(entry: string): string {\r\n  return entry.startsWith(\"//\") ? `${globalThis.location.protocol}${entry}` : entry;\r\n}\r\n/**\r\n * 解析，构造，规范化和编码\r\n * @param entry 地址\r\n * @returns URL\r\n */\r\nexport function createUrl(entry: string): URL {\r\n  return new URL(entry);\r\n}\r\n\r\nexport function formatEntry(entry: string, el: MicroElement): string {\r\n  if (!isString(entry) || !entry) return \"\";\r\n  try {\r\n    //origin: 包含协议名、域名和端口号 pathname：以\"/\"起头紧跟着URL文件路径 search：指示URL的参数字符串\r\n    const { origin, pathname, search } = createUrl(addProtocol(entry));\r\n    console.log(origin, pathname, search);\r\n    el.url = { origin, pathname, search };\r\n    return `${origin}${pathname}${search}`;\r\n  } catch (e) {\r\n    console.error(e, el.appName);\r\n    return \"\";\r\n  }\r\n}\r\n","import { MicroApp } from \"./types/types\";\r\nimport { fetchSource } from \"./utils\";\r\n\r\n/**\r\n * 访问微应用资源\r\n * @param app 微应用实例对象\r\n */\r\nexport default function loadHtml(app: MicroApp) {\r\n  fetchSource(app.entry)\r\n    .then(html => {\r\n      html = html\r\n        .replace(/<head[^>]*>[\\s\\S]*?<\\/head>/i, match => {\r\n          // 将head标签替换为micro-app-head，因为web页面只允许有一个head标签\r\n          return match\r\n            .replace(/<head/i, \"<microweb-head\")\r\n            .replace(/<\\/head>/i, \"</microweb-head>\");\r\n        })\r\n        .replace(/<body[^>]*>[\\s\\S]*?<\\/body>/i, match => {\r\n          // 将body标签替换为micro-app-body，防止与基座应用的body标签重复导致的问题。\r\n          return match\r\n            .replace(/<body/i, \"<microweb-body\")\r\n            .replace(/<\\/body>/i, \"</microweb-body>\");\r\n        });\r\n      // 将html字符串转化为DOM结构\r\n      const htmlDom = document.createElement(\"div\");\r\n      htmlDom.innerHTML = html;\r\n      // 进一步提取和处理js、css等静态资源\r\n      extractSourceDom(htmlDom, app);\r\n      //获取micro-app-head元素\r\n      const microWebHead = htmlDom.querySelector(\"microweb-head\");\r\n      // 如果有远程css资源，则通过fetch请求\r\n      if (app.source.links.size) {\r\n        fetchLinksFromHtml(app, microWebHead, htmlDom);\r\n      } else {\r\n        app.onLoad(htmlDom);\r\n      }\r\n      //如果有远程js资源，则通过fetch请求\r\n      if (app.source.scripts.size) {\r\n        fetchScriptsFromHtml(app, htmlDom);\r\n      } else {\r\n        app.onLoad(htmlDom);\r\n      }\r\n    })\r\n    .catch(e => {\r\n      console.error(\"加载html出错\", e);\r\n    });\r\n}\r\n/**\r\n * 递归处理每一个子元素\r\n * @param { Element } parent 父元素\r\n * @param { MicroApp } app 应用实例\r\n */\r\nexport function extractSourceDom(parent: Element, app: MicroApp) {\r\n  const children = Array.from(parent.children); //Element.children是类数组对象，没有数组特有的方法\r\n  //递归每一个子元素\r\n  children.length &&\r\n    children.forEach(child => {\r\n      extractSourceDom(child, app);\r\n    });\r\n  for (const dom of children) {\r\n    if (dom instanceof HTMLLinkElement) {\r\n      //提取css地址\r\n      const href = dom.getAttribute(\"href\");\r\n      if (dom.getAttribute(\"rel\") === \"stylesheet\" && href) {\r\n        //记入source缓存中\r\n        app.source.links.set(href, {\r\n          code: \"\", //代码内容\r\n        });\r\n      }\r\n      //删除原有元素\r\n      parent.removeChild(dom);\r\n    } else if (dom instanceof HTMLScriptElement) {\r\n      const src = dom.getAttribute(\"src\");\r\n      if (src) {\r\n        //远程script\r\n        app.source.scripts.set(src, {\r\n          code: \"\", //代码内容\r\n          isExternal: true, //是否远程script\r\n        });\r\n      } else if (dom.textContent) {\r\n        //内联script\r\n        const nonceStr = Math.random().toString(36).slice(2, 16); //生成包含(0-9a-z)随机字符串\r\n        app.source.scripts.set(nonceStr, {\r\n          code: dom.textContent, //代码内容\r\n          isExternal: false, //是否远程script\r\n        });\r\n      }\r\n      parent.removeChild(dom);\r\n    } else if (dom instanceof HTMLStyleElement) {\r\n      //进行样式隔离\r\n    }\r\n  }\r\n}\r\n/**\r\n * 获取link远程资源\r\n * @param app 微应用实例\r\n * @param microWebHead microweb-head\r\n * @param htmlDom 微应用\r\n */\r\nexport function fetchLinksFromHtml(\r\n  app: MicroApp,\r\n  microWebHead: Element | null,\r\n  htmlDom: Element\r\n): void {\r\n  const linkEntries = Array.from(app.source.links.entries());\r\n  //通过fetch请求所有css资源\r\n  const fetchLinkPromise: Array<Promise<string>> = [];\r\n  for (const [url] of linkEntries) {\r\n    fetchLinkPromise.push(fetchSource(app.url.origin + url));\r\n  }\r\n  Promise.all(fetchLinkPromise)\r\n    .then(res => {\r\n      for (let i = 0, len = res.length; i < len; i++) {\r\n        const code = res[i];\r\n        //拿到css资源后放入style元素并插入到microweb-head中\r\n        const linkSheetStyle = document.createElement(\"style\");\r\n        linkSheetStyle.textContent = code;\r\n        microWebHead?.appendChild(linkSheetStyle);\r\n        //将代码放入缓存，再次渲染时可以从缓存中获取\r\n        linkEntries[i][1].code = code;\r\n      }\r\n      //处理完成后执行onLoad方法\r\n      app.onLoad(htmlDom);\r\n    })\r\n    .catch(e => {\r\n      console.error(\"加载css出错\", e);\r\n    });\r\n}\r\n/**\r\n * 获取js远程资源\r\n * @param app 微应用实例\r\n * @param htmlDom 微应用dom结构\r\n */\r\nexport function fetchScriptsFromHtml(app: MicroApp, htmlDom: Element): void {\r\n  const scriptEntries = Array.from(app.source.scripts.entries());\r\n  //通过fetch请求所有js资源\r\n  const fetchScriptPromise: Array<Promise<string>> = [];\r\n  for (const [url, info] of scriptEntries) {\r\n    //如果是内联script，则不需要请求资源\r\n    fetchScriptPromise.push(\r\n      info.isExternal ? fetchSource(app.url.origin + url) : Promise.resolve(info.code)\r\n    );\r\n  }\r\n  Promise.all(fetchScriptPromise)\r\n    .then(res => {\r\n      for (let i = 0; i < res.length; i++) {\r\n        const code = res[i];\r\n        //将代码放入缓存，再次渲染时可以从缓存中获取\r\n        scriptEntries[i][1].code = code;\r\n      }\r\n      app.onLoad(htmlDom);\r\n    })\r\n    .catch(e => {\r\n      console.error(\"加载js出错\", e);\r\n    });\r\n}\r\n","//TypeScript声明文件(.d.ts)的使用\r\n//使用场景\r\n//1.在ts文件中对引用的外部库做类型判断；\r\n//2.制作npm包时，书写自己的声明文件，需要在package.json的typing/types字段注册声明文件的路径；\r\n//3.不使用ts时，也可以添加声明文件与（自己的）的模块存放在同一目录下，简单做一下数据结构体，对IDE参数声明也有用哦；\r\n\r\nexport interface Window {\r\n  proxyWindow?: object;\r\n  addEventListener?(type: string, handler: Function, useCapture?: boolean): void;\r\n  removeEventListener?(type: string, handler: Function, useCapture?: boolean): void;\r\n}\r\nexport interface CreateAppType {\r\n  name: string;\r\n  entry: string;\r\n  container: Element;\r\n  url: UrlType;\r\n}\r\nexport interface AppSourceMap {\r\n  links: Map<string, AppSourceMapValue>;\r\n  scripts: Map<string, AppSourceMapValue>;\r\n  html: Element | null;\r\n}\r\nexport interface MicroApp {\r\n  url: UrlType;\r\n  name: string;\r\n  entry: string;\r\n  container: Element | null;\r\n  status: string;\r\n  source: AppSourceMap;\r\n  onLoad(dom: Element): void;\r\n  unmount(isDestory: boolean): void;\r\n}\r\n\r\nexport interface UrlType {\r\n  origin: string;\r\n  pathname: string;\r\n  search: string;\r\n}\r\n\r\nexport type AppSourceMapValue = {\r\n  code: string;\r\n  isExternal?: boolean;\r\n};\r\n\r\nexport enum AppStatus {\r\n  CREATED = \"CREATED\",\r\n  MOUNTED = \"MOUNTED\",\r\n  UNMOUNT = \"UNMOUNT\",\r\n  LOADING = \"LOADING\",\r\n}\r\n","import SandBox from \"./sandbox\";\r\nimport loadHtml from \"./source\";\r\nimport { AppSourceMap, AppStatus, CreateAppType, MicroApp, UrlType } from \"./types/types\";\r\nexport default class CreateApp {\r\n  public url: UrlType;\r\n  public sandBox: SandBox;\r\n  public loadCount: number = 0;\r\n  public name: string;\r\n  public entry: string;\r\n  public container: Element | null;\r\n  public status: string = AppStatus.CREATED; // 组件状态，包括created/loading/mounted/unmount\r\n  public source: AppSourceMap = {\r\n    links: new Map(), //link元素对应的静态资源\r\n    scripts: new Map(), //script元素对应的静态资源\r\n    html: null,\r\n  };\r\n\r\n  constructor({ name, entry, container, url }: CreateAppType) {\r\n    this.name = name; // 应用名称\r\n    this.entry = entry; // 应用地址\r\n    this.container = container; //应用容器\r\n    this.status = AppStatus.LOADING;\r\n    this.url = url;\r\n    loadHtml(this);\r\n    this.sandBox = new SandBox(name);\r\n  }\r\n  /**\r\n   * 资源加载完时执行\r\n   */\r\n  onLoad(htmlDom: Element): void {\r\n    this.loadCount = this.loadCount ? this.loadCount + 1 : 1;\r\n    //第二次执行且组件未卸载时执行渲染\r\n    if (this.loadCount === 2 && this.status !== AppStatus.UNMOUNT) {\r\n      //记录DOM结构用于后续操作\r\n      this.source.html = htmlDom;\r\n      this.mount();\r\n    }\r\n  }\r\n  /**\r\n   * 资源加载完成后进行渲染\r\n   */\r\n  mount(): void {\r\n    //克隆DOM节点\r\n    const cloneHtml = this.source.html?.cloneNode(true)!; //非空断言运算符，从值域中排除null、undefined\r\n    //创建一个fragment节点作为模板，这样不会产生冗余的元素\r\n    const fragment = document.createDocumentFragment();\r\n    Array.from(cloneHtml.childNodes).forEach(node => {\r\n      fragment.appendChild(node);\r\n    });\r\n    //将格式化后的DOM结构插入到容器中\r\n    this.container!.appendChild(fragment);\r\n    //激活沙箱\r\n    this.sandBox.active();\r\n    //执行js\r\n    this.source.scripts.forEach(info => {\r\n      try {\r\n        // (0, eval)(this.sandBox.bindScope(info.code));\r\n        (new Function(this.sandBox.bindScope(info.code)))()\r\n      } catch (error) {\r\n        console.error(\"微应用执行js代码错误!\", error);\r\n      }\r\n    });\r\n    //标记应用为已渲染\r\n    this.status = AppStatus.MOUNTED;\r\n  }\r\n  /**\r\n   * 卸载应用\r\n   * @param destory 是否完全销毁，删除缓存资源\r\n   */\r\n  unmount(destory: boolean): void {\r\n    //更新状态\r\n    this.status = AppStatus.UNMOUNT;\r\n    //清空容器\r\n    this.container = null;\r\n    //关闭沙箱\r\n    this.sandBox.inActive();\r\n    //destory为true，则删除应用\r\n    if (destory) {\r\n      appInstanceMap.delete(this.name);\r\n    }\r\n  }\r\n}\r\nexport const appInstanceMap: Map<string, MicroApp> = new Map();\r\n","import CreateApp, { appInstanceMap } from \"./app\";\r\nimport { UrlType } from \"./types/types\";\r\nimport { formatEntry } from \"./utils\";\r\n//自定义微元素组件\r\nexport class MicroElement extends HTMLElement {\r\n  public url: UrlType = { origin: \"\", pathname: \"\", search: \"\" };\r\n  public appName: string = \"\";\r\n  public appEntry: string = \"\";\r\n  static get observedAttributes() {\r\n    return [\"name\", \"entry\"];\r\n  }\r\n  constructor() {\r\n    super();\r\n  }\r\n  /**\r\n   * 自定义元素被插入到DOM时执行，此时去加载子应用的静态资源并渲染\r\n   */\r\n  public connectedCallback() {\r\n    console.log(\"micro-app is connected\");\r\n    //创建微应用实例\r\n    const app = new CreateApp({\r\n      name: this.appName,\r\n      entry: this.appEntry,\r\n      container: this,\r\n      url: this.url,\r\n    });\r\n    //记入缓存，用于后续功能\r\n    appInstanceMap.set(this.appName, app);\r\n  }\r\n  /**\r\n   * 自定义元素从DOM中删除时执行，此时进行一些卸载操作\r\n   */\r\n  public disconnectedCallback() {\r\n    console.log(\"micro-app has disconnected\");\r\n    //获取应用实例\r\n    const app = appInstanceMap.get(this.appName)!;\r\n    //如果有属性destory，则完全卸载应用包括缓存的文件\r\n    app.unmount(this.hasAttribute(\"destory\"));\r\n  }\r\n  /**\r\n   * 元素属性发生变化时执行，可以获取name，entry等属性的值\r\n   * @param attr\r\n   * @param oldVal\r\n   * @param newVal\r\n   */\r\n  public attributeChangedCallback(attr: string, oldVal: string, newVal: string) {\r\n    console.log(`attribute ${attr}: ${newVal}`);\r\n    if (attr === \"name\" && !this.appName && newVal) {\r\n      this.appName = newVal;\r\n    } else if (attr === \"entry\" && !this.appEntry && newVal) {\r\n      this.appEntry = newVal;\r\n      formatEntry(newVal, this);\r\n    }\r\n  }\r\n}\r\nexport function defineElement() {\r\n  //如果已经定义过，则忽略\r\n  if (!window.customElements.get(\"micro-web\")) {\r\n    /**\r\n     * 注册元素\r\n     * 注册后，就可以像普通元素一样使用micro-web，当micro-web元素被插入或删除DOM时即可触发相应的生命周期函数。\r\n     */\r\n    window.customElements.define(\"micro-web\", MicroElement);\r\n  }\r\n}\r\n","import { defineElement } from \"./element\";\r\n\r\nconst MicroWeb = {\r\n  start() {\r\n    defineElement();\r\n  },\r\n};\r\n\r\nexport default MicroWeb;\r\n"],"names":[],"mappings":"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"}